
Introduction:
    -React JS:
        - A full feature rich application ready to be deployed for production.
        - A library for building user interfaces

    Next JS:
        -A Framework of React JS
        -A package that uses React for building user interfaces
        -Loaded with a lot more features that enable you to build full fledged product ready applications.
        -There is no need to install additional packages. Next JSs provide everyting for you.
        
    Why Lean Next JS?
        -Next JS simplifies the process of building a react application for production.
        -File based Routing
        -Pre-rendering feature
        -Pre-redering, so SEO friendly
        -API Routes.
        -Full stack Framework
        -Support for CSS modules
        -Authentication: support multple athentication system

Course Contents:
    01. Pre-requisites
    02. Installtions
    03. Two Forms of Pre-Rendeing



    04. To Run CLI
    02. References
    00. Conclusion

01. Pre-requisites:
    -HTML, CSS and Javascript Fundamentals
    -ES6 + features
    -React Fundamentals    

02. Installtions:
    -Latest Node Version
    -Editor like VS Code

    Package Installtions:
        Next js CLI: npx create-next-app nextjs-fundamentals

03. Two Forms of Pre-Rendeing followed by
    i)  Stattic Site Generation(SSG)
    ii) Server Site Pre-Rending (SSR)

    i)  Stattic Site Generation(SSG):
        -   The Html is statically generated at build time.The built page is then cached and reused for each request

        -   For a Dynamic page with getStaticPaths and fallback set to true is not generated at build time
            but is generated on the initial request

        -   With increamental static generation, a page can be regenerated for a request after the revalidation time has elapsed

        -   For the most part, the pages are generated using getStaticProps when you build the project.

    ii) Server Site Pre-Rending (SSR)
        Definition of SSR:
            -   SSR is a form of pre-rendering where the HTML is generated at request time

            -   SSR is requied when you need to fetch data per request and also when you need to fetch personalized data keeping in mind SEO
        
        Features:
            i)  getServerSideProps()
                Retuns value per request

                Example:                 
                    export const getServerSideProps = async () => {
                    const data = await axios.get('http://localhost:4000/news')
                        .then(res => {
                        return res.data
                        })

                        return {
                        props:{
                            articles:data
                        }
                        }
                    }






04. To Run CLI:
    -For running on dev environment
        CLI: npm run dev
    -For making a build version in .next folder and to start the server
        CLI: npm run build
        CLI: npm start







References:
    -https://www.youtube.com/watch?v=9P8mASSREYM&list=PLC3y8-rFHvwgC9mj0qv972IO5DmD-H0ZH&ab_channel=Codevolution

Conclusion

